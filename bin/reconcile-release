#!/usr/bin/env node
const chalk = require('chalk');
const inquirer = require('inquirer');
const { execSync } = require('child_process');

const hello = 'test';

const releaseBranches = execSync('git branch --all')
  .toString('utf8')
  .split('\n  ')
  .filter((branch) => (
    branch.indexOf('release') === 0 ||
    branch.indexOf('remotes/origin/release') === 0
  ))
  .map((branch) => (
    branch
      .replace('remotes/origin/', '')
      .replace('*', '')
      .trim()
  ))
  .concat('release-merge-test')
  .reverse();

inquirer
  .prompt([
    {
      type: 'list',
      choices: releaseBranches,
      name: 'releaseBranch',
      message: 'Welcome to the Irving release wizard! Which release branch would you like to merge?'
    },
  ])
  .then(({ releaseBranch }) => {
    execSync(`git checkout ${releaseBranch}`);
    execSync('git checkout release-merge');

    try {
      execSync(`git merge ${releaseBranch}`).toString('utf8');
    } catch (e) {
      console.log(e.message);
      if (e.message.includes('Automatic merge failed')) {
        return inquirer.prompt([
          {
            type: 'confirm',
            name: 'dependencies',
            message: 'have any dependencies been installed in the release branch that have not been merged into main?',
          },
        ]);
      } else {
        return inquirer.prompt([
          {
            type: 'confirm',
            name: 'error',
            message: e.message,
          },
        ]);
      }
    }
  });
